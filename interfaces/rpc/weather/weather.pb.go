// Code generated by protoc-gen-go. DO NOT EDIT.
// source: weather.proto

package weather // import "github.com/tozastation/go-grpc-ddd-example/interfaces/rpc/weather"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Weather struct {
	ID                   float64  `protobuf:"fixed64,1,opt,name=ID,proto3" json:"ID,omitempty"`
	CityName             string   `protobuf:"bytes,2,opt,name=CityName,proto3" json:"CityName,omitempty"`
	TempMax              float64  `protobuf:"fixed64,3,opt,name=TempMax,proto3" json:"TempMax,omitempty"`
	TempMin              float64  `protobuf:"fixed64,4,opt,name=TempMin,proto3" json:"TempMin,omitempty"`
	Wind                 float64  `protobuf:"fixed64,5,opt,name=Wind,proto3" json:"Wind,omitempty"`
	Type                 string   `protobuf:"bytes,6,opt,name=Type,proto3" json:"Type,omitempty"`
	Description          string   `protobuf:"bytes,7,opt,name=Description,proto3" json:"Description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Weather) Reset()         { *m = Weather{} }
func (m *Weather) String() string { return proto.CompactTextString(m) }
func (*Weather) ProtoMessage()    {}
func (*Weather) Descriptor() ([]byte, []int) {
	return fileDescriptor_weather_76aceaef403caee8, []int{0}
}
func (m *Weather) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Weather.Unmarshal(m, b)
}
func (m *Weather) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Weather.Marshal(b, m, deterministic)
}
func (dst *Weather) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Weather.Merge(dst, src)
}
func (m *Weather) XXX_Size() int {
	return xxx_messageInfo_Weather.Size(m)
}
func (m *Weather) XXX_DiscardUnknown() {
	xxx_messageInfo_Weather.DiscardUnknown(m)
}

var xxx_messageInfo_Weather proto.InternalMessageInfo

func (m *Weather) GetID() float64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Weather) GetCityName() string {
	if m != nil {
		return m.CityName
	}
	return ""
}

func (m *Weather) GetTempMax() float64 {
	if m != nil {
		return m.TempMax
	}
	return 0
}

func (m *Weather) GetTempMin() float64 {
	if m != nil {
		return m.TempMin
	}
	return 0
}

func (m *Weather) GetWind() float64 {
	if m != nil {
		return m.Wind
	}
	return 0
}

func (m *Weather) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Weather) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type GetRequest struct {
	CityName             string   `protobuf:"bytes,1,opt,name=CityName,proto3" json:"CityName,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRequest) Reset()         { *m = GetRequest{} }
func (m *GetRequest) String() string { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()    {}
func (*GetRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_weather_76aceaef403caee8, []int{1}
}
func (m *GetRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRequest.Unmarshal(m, b)
}
func (m *GetRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRequest.Marshal(b, m, deterministic)
}
func (dst *GetRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRequest.Merge(dst, src)
}
func (m *GetRequest) XXX_Size() int {
	return xxx_messageInfo_GetRequest.Size(m)
}
func (m *GetRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRequest proto.InternalMessageInfo

func (m *GetRequest) GetCityName() string {
	if m != nil {
		return m.CityName
	}
	return ""
}

type GetResponse struct {
	Weather              *Weather `protobuf:"bytes,1,opt,name=Weather,proto3" json:"Weather,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetResponse) Reset()         { *m = GetResponse{} }
func (m *GetResponse) String() string { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()    {}
func (*GetResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_weather_76aceaef403caee8, []int{2}
}
func (m *GetResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetResponse.Unmarshal(m, b)
}
func (m *GetResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetResponse.Marshal(b, m, deterministic)
}
func (dst *GetResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetResponse.Merge(dst, src)
}
func (m *GetResponse) XXX_Size() int {
	return xxx_messageInfo_GetResponse.Size(m)
}
func (m *GetResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetResponse proto.InternalMessageInfo

func (m *GetResponse) GetWeather() *Weather {
	if m != nil {
		return m.Weather
	}
	return nil
}

func init() {
	proto.RegisterType((*Weather)(nil), "weather.Weather")
	proto.RegisterType((*GetRequest)(nil), "weather.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "weather.GetResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// WeathersClient is the client API for Weathers service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WeathersClient interface {
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
}

type weathersClient struct {
	cc *grpc.ClientConn
}

func NewWeathersClient(cc *grpc.ClientConn) WeathersClient {
	return &weathersClient{cc}
}

func (c *weathersClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := c.cc.Invoke(ctx, "/weather.Weathers/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WeathersServer is the server API for Weathers service.
type WeathersServer interface {
	Get(context.Context, *GetRequest) (*GetResponse, error)
}

func RegisterWeathersServer(s *grpc.Server, srv WeathersServer) {
	s.RegisterService(&_Weathers_serviceDesc, srv)
}

func _Weathers_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WeathersServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/weather.Weathers/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WeathersServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Weathers_serviceDesc = grpc.ServiceDesc{
	ServiceName: "weather.Weathers",
	HandlerType: (*WeathersServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Weathers_Get_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "weather.proto",
}

func init() { proto.RegisterFile("weather.proto", fileDescriptor_weather_76aceaef403caee8) }

var fileDescriptor_weather_76aceaef403caee8 = []byte{
	// 291 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x51, 0x4f, 0x4b, 0xc3, 0x30,
	0x14, 0x37, 0xdb, 0x5c, 0xe7, 0x1b, 0x8a, 0x44, 0x0f, 0x61, 0xa7, 0xd1, 0xd3, 0x10, 0xb6, 0xc2,
	0x3c, 0x79, 0xf1, 0xb0, 0x15, 0xca, 0x0e, 0x8a, 0x94, 0xc2, 0xc0, 0x5b, 0x56, 0x9f, 0x5d, 0xc0,
	0x26, 0x31, 0xc9, 0xd0, 0xf9, 0xb5, 0xfc, 0x82, 0xb2, 0xac, 0xad, 0xeb, 0xed, 0xf7, 0x2f, 0xef,
	0xfd, 0x92, 0xc0, 0xe5, 0x17, 0x72, 0xb7, 0x45, 0x33, 0xd3, 0x46, 0x39, 0x45, 0x83, 0x8a, 0x86,
	0xbf, 0x04, 0x82, 0xf5, 0x11, 0xd3, 0x2b, 0xe8, 0xac, 0x62, 0x46, 0xc6, 0x64, 0x42, 0xd2, 0xce,
	0x2a, 0xa6, 0x23, 0x18, 0x2c, 0x85, 0xdb, 0x3f, 0xf3, 0x12, 0x59, 0x67, 0x4c, 0x26, 0x17, 0x69,
	0xc3, 0x29, 0x83, 0x20, 0xc3, 0x52, 0x3f, 0xf1, 0x6f, 0xd6, 0xf5, 0x07, 0x6a, 0xda, 0x38, 0x42,
	0xb2, 0xde, 0x89, 0x23, 0x24, 0xa5, 0xd0, 0x5b, 0x0b, 0xf9, 0xc6, 0xce, 0xbd, 0xec, 0xf1, 0x41,
	0xcb, 0xf6, 0x1a, 0x59, 0xdf, 0xcf, 0xf7, 0x98, 0x8e, 0x61, 0x18, 0xa3, 0xcd, 0x8d, 0xd0, 0x4e,
	0x28, 0xc9, 0x02, 0x6f, 0x9d, 0x4a, 0xe1, 0x04, 0x20, 0x41, 0x97, 0xe2, 0xe7, 0x0e, 0xad, 0x6b,
	0xf5, 0x24, 0xed, 0x9e, 0xe1, 0x03, 0x0c, 0x7d, 0xd2, 0x6a, 0x25, 0x2d, 0xd2, 0xbb, 0xe6, 0xb6,
	0x3e, 0x39, 0x9c, 0x5f, 0xcf, 0xea, 0x87, 0xa9, 0xf4, 0xb4, 0x0e, 0xcc, 0x1f, 0x61, 0x50, 0x41,
	0x4b, 0xe7, 0xd0, 0x4d, 0xd0, 0xd1, 0x9b, 0x26, 0xfd, 0xbf, 0x7e, 0x74, 0xdb, 0x16, 0x8f, 0x9b,
	0xc2, 0xb3, 0x45, 0xfc, 0xba, 0x28, 0x84, 0xdb, 0xee, 0x36, 0xb3, 0x5c, 0x95, 0x91, 0x53, 0x3f,
	0xdc, 0x3a, 0x7e, 0xa8, 0x1f, 0x15, 0xe9, 0xcb, 0x72, 0x9a, 0x19, 0x2e, 0xa4, 0x90, 0xc5, 0x34,
	0x51, 0x1f, 0x5c, 0x16, 0x91, 0x90, 0x0e, 0xcd, 0x3b, 0xcf, 0xd1, 0x46, 0x46, 0xe7, 0x51, 0x35,
	0x73, 0xd3, 0xf7, 0x1f, 0x76, 0xff, 0x17, 0x00, 0x00, 0xff, 0xff, 0xa4, 0x71, 0x0c, 0xe5, 0xc1,
	0x01, 0x00, 0x00,
}
