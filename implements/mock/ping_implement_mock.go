// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/tozastation/gRPC-Training-Golang/implements (interfaces: IPingImplement)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	gomock "github.com/golang/mock/gomock"
	ping "github.com/tozastation/go-grpc-ddd-example/interfaces/rpc/ping"
	reflect "reflect"
)

// MockIPingImplement is a mock of IPingImplement interface
type MockIPingImplement struct {
	ctrl     *gomock.Controller
	recorder *MockIPingImplementMockRecorder
}

// MockIPingImplementMockRecorder is the mock recorder for MockIPingImplement
type MockIPingImplementMockRecorder struct {
	mock *MockIPingImplement
}

// NewMockIPingImplement creates a new mock instance
func NewMockIPingImplement(ctrl *gomock.Controller) *MockIPingImplement {
	mock := &MockIPingImplement{ctrl: ctrl}
	mock.recorder = &MockIPingImplementMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIPingImplement) EXPECT() *MockIPingImplementMockRecorder {
	return m.recorder
}

// Ping mocks base method
func (m *MockIPingImplement) Ping(arg0 context.Context, arg1 *ping.Empty) (*ping.Pong, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Ping", arg0, arg1)
	ret0, _ := ret[0].(*ping.Pong)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Ping indicates an expected call of Ping
func (mr *MockIPingImplementMockRecorder) Ping(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Ping", reflect.TypeOf((*MockIPingImplement)(nil).Ping), arg0, arg1)
}
